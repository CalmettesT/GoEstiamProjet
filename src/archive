// type HistoriqueCommand struct{}

// func (c HistoriqueCommand) Execute(args []string) error {
// 	databases.ConnectDataBase()

// 	journaux, err := databases.LastJournal()
// 	if err != nil {
// 		log.Fatal(err)
// 	}

// 	if len(journaux) > 0 {
// 		fmt.Printf("Voici l'historique des 50 derniÃ¨res commandes :\n\n")
// 		for _, entry := range journaux {
// 			fmt.Println(entry.ID, " | ", entry.DH, " | ", entry.MF, " | ", entry.Argument, " | ", entry.Statut)
// 		}
// 	}
// 	return nil
// }

// type HelpCommande struct{}

// func (c HelpCommande) Execute(args []string) error {
// 	// Liste de toutes les commandes disponibles
// 	if len(os.Args) > 2 {
// 		switch os.Args[2] {
// 		case "dir":
// 			// Commande dir
// 			command := []string{"create", "read", "rename", "delete"}
// 			if len(command) > 0 {
// 				fmt.Println("Voici les sous-commandes disponibles pour la commande dir:")
// 				for _, entry := range command {
// 					fmt.Println("-", entry)
// 				}
// 			}

// 		case "file":
// 			// Commande file
// 			command := [...]string{"create", "read", "rename", "updatetext", "delete"}
// 			if len(command) > 0 {
// 				fmt.Println("Voici les sous-commandes disponibles pour la commande file:")
// 				for _, entry := range command {
// 					fmt.Println("-", entry)
// 				}
// 			}

// 		default:
// 			fmt.Println("Aucune commande ne correspond Ã  votre saisie.")

// 		}
// 	} else if len(os.Args) == 2 {
// 		// Commande de base
// 		command := [...]string{"dir", "file"}
// 		if len(command) > 0 {
// 			for _, entry := range command {
// 				fmt.Println(entry)
// 			}
// 		}
// 	}
// 	return nil
// }